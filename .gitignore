# This file should only ignore things that are generated during a `x.py` build,
# generated by common IDEs, and optional files controlled by the user that
# affect the build (such as bootstrap.toml).
# In particular, things like `mir_dump` should not be listed here; they are only
# created during manual debugging and many people like to clean up instead of
# having git ignore such leftovers. You can use `.git/info/exclude` to
# configure your local ignore list.

## File system
.DS_Store
desktop.ini

## Editor-specific (user-controlled, not source content)
*.swp
*.swo
Session.vim
.vim/
.helix/
.zed/
.dir-locals.el

## IDEs and project settings
.idea/
*.iml
.vscode/
.cproject
.project
.favorites.json
.settings/
.vs/

## Tools and metadata
.valgrindrc
.cargo/  # Tool-managed config dir, often regenerated
!/tests/run-make/thumb-none-qemu/example/.cargo  # Required test case

## Explicit build-config files (regenerated or user-local)
.bootstrap.toml
/config.toml
/Makefile
config.mk
config.stamp
no_llvm_build

## Build outputs (always generated)
build/
build-rust-analyzer/
dl/
doc/
dist/
inst/
llvm/
mingw-build/
target/
library/target/
src/bootstrap/target/
src/ci/citool/target/
src/tools/x/target/
vendor/         # Created by `x vendor`
obj/            # Created by `src/ci/docker/run.sh`

# Nix build artifacts
src/tools/nix-dev-shell/flake.lock
flake.lock
/.direnv/
.envrc

## ICE reports (generated only on crash)
rustc-ice-*.txt

## Transient editor/OS/system files
*~
#*#
.#*

## Tags (typically generated by tooling)
tags
tags.*
TAGS
TAGS.*

## Python bytecode
__pycache__/
*.py[cod]
*$py.class

## Node tooling (used in Rustc Dev Guide)
node_modules/
/src/doc/rustc-dev-guide/mermaid.min.js

## Rustdoc GUI test locks
tests/rustdoc-gui/src/**.lock

